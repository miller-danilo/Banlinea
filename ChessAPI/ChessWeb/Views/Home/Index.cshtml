@model ChessWeb.Models.Jugada

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>


@using (Html.BeginForm("Jugar", "Home", FormMethod.Post, new { id = "frmJugar" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Jugada</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.TipoFicha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TipoFicha, Model.TiposFichas, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoFicha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.X, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.X, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.X, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Y, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Y, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Y, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NuevaX, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NuevaX, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NuevaX, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NuevaY, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NuevaY, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NuevaY, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div id="dvMovimientosPosibles">
    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(function () {
            $("#frmJugar").submit(function () {
                var data = {
                    Nombre: $("#TipoFicha").val(),
                    PosicionActual: { X: $("#X").val(), Y: $("#Y").val() },
                    NuevaPosicion: { X: $("#NuevaX").val(), Y: $("#NuevaY").val() }
                };

                var stringReqdata = JSON.stringify(data);



                $.ajax({
                    url: "http://localhost:53422/api/Jugada/Mover",
                    method: "POST",
                    dataType: "json",
                    data: stringReqdata,
                    context: document.body,
                    contentType: 'application/json; charset=utf-8',
                    beforeSend: function(){
                        $("#dvMovimientosPosibles").empty();
                    },
                    success: function (data, textStatus, xhr) {
                        var dvResultado = $("#dvMovimientosPosibles");

                        dvResultado.append("<h3>La Posici&oacute;n Actual Cambi&oacute; a: X-> " + data.PosicionActual.X + ", Y-> " + data.PosicionActual.Y + "</h3>");

                        $("#X").val(data.PosicionActual.X);
                        $("#Y").val(data.PosicionActual.Y);

                        $("#NuevaX").val("");
                        $("#NuevaY").val("");
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        if (xhr.status === 403) {
                            var data = xhr.responseJSON;
                            $("#dvMovimientosPosibles").append("<h3>"+data.Mensaje+"</h3>");
                            showResponse(data.MovimientosPosibles);
                        }
                    }
                });

                //$.post('http://localhost:53422/api/Jugada/Mover', data, function (data) {
                //    console.log(data);
                //});

                return false;
            });


        });

        function showResponse(movimientos) {
            var dvResultado = $("#dvMovimientosPosibles");
            dvResultado.append("<h3>Los movimientos posibles son: </h3>");
            $.each(movimientos, function (i, posicion) {
                dvResultado.append("<div>X: " + posicion.X + ", Y: " + posicion.Y + "</div>");
            });
        }
    </script>
}
